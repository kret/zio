"use strict";(self.webpackChunkzio_site=self.webpackChunkzio_site||[]).push([[96107],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),c=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(r),d=n,f=p["".concat(s,".").concat(d)]||p[d]||m[d]||i;return r?a.createElement(f,o(o({ref:t},u),{},{components:r})):a.createElement(f,o({ref:t},u))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:n,o[1]=l;for(var c=2;c<i;c++)o[c]=r[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9904:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var a=r(87462),n=(r(67294),r(3905));const i={id:"use-cases",title:"ZIO Schema Use cases",sidebar_label:"Use cases"},o=void 0,l={unversionedId:"zio-schema/use-cases",id:"zio-schema/use-cases",title:"ZIO Schema Use cases",description:"ZIO Schema allows us to create representations of our data types as values.",source:"@site/docs/zio-schema/use-cases.md",sourceDirName:"zio-schema",slug:"/zio-schema/use-cases",permalink:"/zio-schema/use-cases",draft:!1,editUrl:"https://github.com/zio/zio/edit/series/2.x/docs/zio-schema/use-cases.md",tags:[],version:"current",frontMatter:{id:"use-cases",title:"ZIO Schema Use cases",sidebar_label:"Use cases"},sidebar:"ecosystem-sidebar",previous:{title:"Motivation",permalink:"/zio-schema/motivation"},next:{title:"Basic Building Blocks",permalink:"/zio-schema/basic-building-blocks"}},s={},c=[],u={toc:c},p="wrapper";function m(e){let{components:t,...r}=e;return(0,n.kt)(p,(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"ZIO Schema allows us to create representations of our data types as values."),(0,n.kt)("p",null,"Once we have a representation of our data types, we can use it to"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Serialize and deserialize our types"),(0,n.kt)("li",{parentName:"ul"},"Validate our types"),(0,n.kt)("li",{parentName:"ul"},"Transform our types"),(0,n.kt)("li",{parentName:"ul"},"Create instances of your types")),(0,n.kt)("p",null,"We can then use one of the various codecs (or create our own) to serialize and deserialize your types."),(0,n.kt)("p",null,"Example of possible codecs are:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"CSV Codec"),(0,n.kt)("li",{parentName:"ul"},"JSON Codec (already available)"),(0,n.kt)("li",{parentName:"ul"},"Apache Avro Codec (in progress)"),(0,n.kt)("li",{parentName:"ul"},"Apache Thrift Codec (in progress)"),(0,n.kt)("li",{parentName:"ul"},"XML Codec"),(0,n.kt)("li",{parentName:"ul"},"YAML Codec"),(0,n.kt)("li",{parentName:"ul"},"Protobuf Codec (already available)"),(0,n.kt)("li",{parentName:"ul"},"QueryString Codec"),(0,n.kt)("li",{parentName:"ul"},"etc.")),(0,n.kt)("p",null,"Example use cases that are possible:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Serializing and deserializing JSON"),(0,n.kt)("li",{parentName:"ul"},"Serializing and deserializing XML"),(0,n.kt)("li",{parentName:"ul"},"Validating JSON"),(0,n.kt)("li",{parentName:"ul"},"Validating XML"),(0,n.kt)("li",{parentName:"ul"},"Transforming JSON"),(0,n.kt)("li",{parentName:"ul"},"Transforming XML"),(0,n.kt)("li",{parentName:"ul"},"Transforming JSON to XML"),(0,n.kt)("li",{parentName:"ul"},"Transforming XML to JSON"),(0,n.kt)("li",{parentName:"ul"},"Creating diffs from arbitrary data structures"),(0,n.kt)("li",{parentName:"ul"},"Creating migrations / evolutions e.g. of Events used in Event-Sourcing"),(0,n.kt)("li",{parentName:"ul"},"Transformation pipelines, e.g.",(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},"Convert from protobuf to object, e.g. ",(0,n.kt)("inlineCode",{parentName:"li"},"PersonDTO"),","),(0,n.kt)("li",{parentName:"ol"},"Transform to another representation, e.g. ",(0,n.kt)("inlineCode",{parentName:"li"},"Person"),","),(0,n.kt)("li",{parentName:"ol"},"Validate"),(0,n.kt)("li",{parentName:"ol"},"Transform to JSON ",(0,n.kt)("inlineCode",{parentName:"li"},"JsonObject")),(0,n.kt)("li",{parentName:"ol"},"Serialize to ",(0,n.kt)("inlineCode",{parentName:"li"},"String"))))))}m.isMDXComponent=!0}}]);